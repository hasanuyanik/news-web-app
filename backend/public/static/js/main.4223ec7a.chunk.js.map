{"version":3,"sources":["reportWebVitals.js","shared/ApiProgress.js","api/apiCalls.js","components/Input.js","components/ButtonWithProgress.js","redux/Contants.js","redux/authActions.js","pages/UserSignupPage.js","pages/UserLoginPage.js","pages/AdminSignupPage.js","pages/AdminLoginPage.js","assets/profile.png","components/ProfileImageWithDefault.js","components/UserListItem.js","components/Spinner.js","components/UserList.js","components/Modal.js","components/ProfileCard.js","pages/UserPage.js","components/TopBar.js","assets/hoaxify.png","components/UserRequestItem.js","components/UserRequestList.js","container/App.js","i18n.js","redux/authReducer.js","redux/configureStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useApiProgress","apiMethod","apiPath","useState","pendingApiCall","setPendingApiCall","useEffect","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","axios","interceptors","request","use","response","config","error","eject","getUsers","page","get","getDeleteRequests","status","setAuthorizationHeader","isLoggedIn","token","authorizationHeaderValue","defaults","headers","getUser","username","getDeleteRequest","body","post","updateUser","deleteUserAddRequest","cancelDeleteUser","deleteUser","Input","props","label","name","onChange","type","defaultValue","className","undefined","ButtonWithProgress","onClick","disabled","text","LOGOUT_SUCCESS","LOGIN_SUCCESS","UPDATE_SUCCESS","loginSuccess","authState","ACTIONS","payload","updateSuccess","fullname","email","phone","logoutHandler","credentials","dispatch","a","creds","loginHandler","data","role","signupHandler","user","loginAdminHandler","admin","password","signupAdminHandler","UserSignupPage","passwordRepeatError","passwordRepeat","form","setForm","errors","setErrors","useDispatch","event","target","value","previousErrors","previousForm","onClickSignup","preventDefault","history","push","console","log","validationErrors","t","useTranslation","usernameError","fullnameError","emailError","phoneError","passwordError","pendingApiCallSignup","pendingApiCallLogin","UserLoginPage","setUsername","setPassword","setError","onClickLogin","message","buttonEnabled","AdminSignupPage","AdminLoginPage","ProfileImageWithDefault","image","tempimage","imageSource","defaultPicture","alt","src","onError","UserListItem","to","width","height","Spinner","UserList","content","size","number","setPage","loadFailure","setLoadFailure","loadUsers","useSelector","store","users","last","first","actionDiv","previousPage","nextPage","map","Modal","visible","onClickCancel","onClickOk","title","okButton","style","backgroundColor","ProfileCard","inEditMode","setInEditMode","updatedFullname","setUpdatedFullname","updatedEmail","setUpdatedEmail","updatedPhone","setUpdatedPhone","loggedInUsername","pathUsername","useParams","setUser","setDeleteRequest","editable","setEditable","setValidationErrors","modalVisible","setModalVisible","useHistory","deleteRequest","previousValidationErrors","updated_at","created_at","pendingApiCallDeleteUser","onClickSave","onClickDeleteUserRequest","onClickCancelDeleteUser","UserPage","notFound","setNotFound","responseRequest","loadUser","fontSize","TopBar","menuArea","useRef","menuVisible","setMenuVisible","document","addEventListener","menuClickTracker","removeEventListener","current","contains","onLogoutSuccess","links","dropDownClass","ref","cursor","UserRequestItem","onClickDeleteUser","UserRequestList","App","exact","path","component","UserRequestPage","i18n","initReactI18next","init","resources","en","translations","Username","Password","Logout","Users","Next","Previous","Edit","Save","Cancel","tr","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","defaultState","displayName","authReducer","state","action","secureLs","SecureLS","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","subscribe","newState","getState","set","configureStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4223ec7a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useApiProgress = (apiMethod, apiPath) => {\r\n    const [pendingApiCall, setPendingApiCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let requestInterceptor, responseInterceptor;\r\n        const updateApiCallFor = (method, url, inProgress) => {\r\n            if(url.startsWith(apiPath) && method == apiMethod){\r\n                setPendingApiCall(inProgress);\r\n            }\r\n        };\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use((request) => {\r\n                const { url, method } = request;\r\n                updateApiCallFor(method, url, true);\r\n                return request;\r\n            });\r\n    \r\n            responseInterceptor = axios.interceptors.response.use(\r\n                (response) => {\r\n                    const { url, method } = response.config;\r\n                    updateApiCallFor(method, url, false);\r\n                    return response;\r\n                }, (error) => {\r\n                    const { url, method } = error.config;\r\n                    updateApiCallFor(method, url, false);\r\n                    throw error;\r\n                }\r\n            );\r\n        };\r\n\r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.response.eject(responseInterceptor);\r\n        }\r\n\r\n        registerInterceptors();\r\n        return function unmount() {\r\n           unregisterInterceptors();\r\n        }\r\n    }, [apiPath, apiMethod]);\r\n    return pendingApiCall;\r\n}\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const signup = body => {\r\n    return axios.post(`/api/user/add`, body);\r\n};\r\nexport const login = creds =>{\r\n    return axios.post('/api/auth', creds);\r\n};\r\nexport const signupAdmin = (body) => {\r\n    return axios.post('/api/admin', body);\r\n};\r\nexport const loginAdmin = creds =>{\r\n    return axios.post('/api/admin/auth', creds);\r\n};\r\nexport const logout = creds =>{\r\n    return axios.post('/api/logout', creds);\r\n};\r\n\r\nexport const getUsers = (page = 0) => {\r\n    return axios.get(`/api/user/${page}`);\r\n}\r\n\r\nexport const getDeleteRequests = (page = 0, status=0) => {\r\n    return axios.get(`/api/userwiper/${page}/${status}`);\r\n}\r\n\r\nexport const setAuthorizationHeader = ({ isLoggedIn, token }) => {\r\n    if(isLoggedIn){\r\n        const authorizationHeaderValue = `Bearer ${token}`;\r\n        axios.defaults.headers['Authorization'] = authorizationHeaderValue;\r\n    }else{\r\n        delete axios.defaults.headers['Authorization'];\r\n    }\r\n}\r\n\r\nexport const getUser = username => {\r\n    return axios.get(`/api/user/${username}`);\r\n};\r\n\r\nexport const getDeleteRequest = (body) => {\r\n    return axios.post(`/api/userwiper/findRequest`, body);\r\n}\r\n\r\nexport const updateUser = (body) => {\r\n    return axios.post(`/api/user/edit`, body);\r\n};\r\n\r\nexport const deleteUserAddRequest = (body) => {\r\n    return axios.post(`/api/userwiper/addRequest`, body);\r\n};\r\n\r\nexport const cancelDeleteUser = (body) => {\r\n    return axios.post(`/api/userwiper/deleteRequest`, body);\r\n};\r\n\r\nexport const deleteUser = (body) => {\r\n    return axios.post(`/api/userwiper/userdelete`, body);\r\n};\r\n\r\nexport const changeLanguage = language => {\r\n    axios.defaults.headers['accept-language'] = language;\r\n};\r\n","import React, {Component} from 'react';\r\n\r\nconst Input = (props) => {\r\n    const {label, error, name, onChange, type, defaultValue} = props\r\n    let className = 'form-control';\r\n    if(type == 'file'){\r\n        className += '-file';\r\n    } \r\n    if(error != undefined){\r\n        className += ' is-invalid';\r\n    }\r\n    \r\n    return(\r\n        <div className=\"form-group m-2\">\r\n            <label>{label}</label>\r\n            <input className={className} name={name} onChange={onChange} type={type} defaultValue={defaultValue}/>\r\n            <div className=\"invalid-feedback\">{error}</div>\r\n        </div>\r\n    );\r\n}\r\nexport default Input;","import React, { Component } from 'react';\r\n\r\nconst ButtonWithProgress = (props) => {\r\n\r\n    const { onClick, pendingApiCall, disabled, text, className} = props;\r\n\r\n    return (\r\n        <button className={className || 'btn btn-primary'} onClick={onClick} disabled={disabled}>\r\n            {pendingApiCall && <span className=\"spinner-border spinner-border-sm\"></span>}{text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ButtonWithProgress;","export const LOGOUT_SUCCESS = 'logout-success';\r\nexport const LOGIN_SUCCESS = 'login-success';\r\nexport const UPDATE_SUCCESS = 'update-success';","import * as ACTIONS from './Contants';\r\nimport { login, signup, logout, loginAdmin, signupAdmin } from '../api/apiCalls';\r\n\r\nexport const logoutSuccess = () => {\r\n    return {\r\n        type: ACTIONS.LOGOUT_SUCCESS\r\n    }\r\n};\r\n\r\nexport const loginSuccess = authState => {\r\n    return {\r\n        type: ACTIONS.LOGIN_SUCCESS,\r\n        payload: authState\r\n    }\r\n};\r\n\r\nexport const updateSuccess = ({fullname, email, phone}) => {\r\n    return {\r\n        type: ACTIONS.UPDATE_SUCCESS,\r\n        payload: {\r\n            fullname,\r\n            email,\r\n            phone\r\n        }\r\n    }\r\n};\r\n\r\nexport const logoutHandler = (credentials) => {\r\n    return async function (dispatch) {\r\n        const response = await logout(credentials);\r\n        dispatch(logoutSuccess());\r\n        return response;\r\n    }\r\n}\r\n\r\nexport const loginHandler = (credentials) => {\r\n    return async function (dispatch) {\r\n    const response = await login(credentials);\r\n    const authState = {\r\n         ...response.data[0],\r\n        role: \"user\"\r\n    };\r\n    dispatch(loginSuccess(authState));\r\n    return response;\r\n    }\r\n}\r\n\r\nexport const signupHandler = user => {\r\n    return async function (dispatch) {\r\n        const response = await signup(user);\r\n        // dispatch(loginHandler(user));\r\n        return response;\r\n    }\r\n};\r\n\r\nexport const loginAdminHandler = (credentials) => {\r\n    return async function (dispatch) {\r\n    const response = await loginAdmin(credentials);\r\n    const authState = {\r\n        ...response.data.admin,\r\n        role: \"admin\",\r\n        password: credentials.password,\r\n        token: response.data.token\r\n    };\r\n    dispatch(loginSuccess(authState));\r\n    return response;\r\n    }\r\n}\r\n\r\nexport const signupAdminHandler = user => {\r\n    return async function (dispatch) {\r\n        const response = await signupAdmin(user);\r\n        dispatch(loginAdminHandler(user));\r\n        return response;\r\n    }\r\n};","import React, { useState } from 'react';\r\nimport {signup} from '../api/apiCalls';\r\nimport Input from '../components/Input';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signupHandler } from '../redux/authActions';\r\n\r\nconst UserSignupPage = (props) => {\r\n    const [form, setForm] = useState({\r\n        username: null,\r\n        fullname: null,\r\n        email: null,\r\n        phone: null,\r\n        password: null,\r\n        passwordRepeat: null\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const dispatch = useDispatch();\r\n const onChange = event => {\r\n        const {name, value} = event.target;\r\n        setErrors((previousErrors) => ({ ...previousErrors, [name]: undefined}));\r\n        setForm((previousForm) => ({ ...previousForm, [name]: value}));\r\n        // this.setState({\r\n        //     [name]:value,\r\n        //     errors\r\n        // })\r\n    }\r\n    const onClickSignup = async event => {\r\n        event.preventDefault();  \r\n        const { history } = props;\r\n        const { push } = history;\r\n        const {username, fullname, email, phone, password} = form;\r\n        const body = {\r\n            username,\r\n            fullname,\r\n            email,\r\n            phone,\r\n            password\r\n        };\r\n        console.log(body);\r\n        try{\r\n            await dispatch(signupHandler(body));\r\n            push('/');\r\n        }catch(error){\r\n            if(error.response.data.validationErrors){\r\n              setErrors(error.response.data.validationErrors);\r\n            }  \r\n            \r\n        }\r\n    }\r\n        const { t } = useTranslation();\r\n        const {username: usernameError, fullname: fullnameError, email: emailError, phone: phoneError, password: passwordError} = errors;\r\n        const pendingApiCallSignup = useApiProgress('post','/api/user/add');\r\n        const pendingApiCallLogin = useApiProgress('post','/api/auth');\r\n        const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n\r\n        let passwordRepeatError;\r\n        if(form.password != form.passwordRepeat){\r\n            passwordRepeatError = t('Password mismatch');\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n            <form>\r\n                <h1 className=\"text-center\">{t('Sign Up')}</h1>\r\n                <Input name=\"username\" label={t('Username')} error={usernameError} onChange={onChange} />\r\n                <Input name=\"fullname\" label={t('Fullname')} error={fullnameError} onChange={onChange} />\r\n                <Input name=\"email\" label={t('Email')} error={emailError} onChange={onChange} />\r\n                <Input name=\"phone\" label={t('Phone')} error={phoneError} onChange={onChange} />\r\n                <Input name=\"password\" label={t('Password')} error={passwordError} onChange={onChange} type=\"password\" />\r\n                <Input name=\"passwordRepeat\" label={t('Password Repeat')} error={passwordRepeatError} onChange={onChange} type=\"password\"/>\r\n                <div className=\"form-group text-center\">\r\n                    <ButtonWithProgress onClick={onClickSignup} disabled={pendingApiCall || passwordRepeatError != undefined} pendingApiCall={pendingApiCall} text={t('Sign Up')}/>\r\n                </div>\r\n                \r\n            </form>\r\n            </div>\r\n\r\n        );\r\n}\r\n\r\nexport default UserSignupPage;","import React, { useEffect, useState } from 'react';\r\nimport Input from '../components/Input';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginHandler} from '../redux/authActions';\r\n\r\nconst UserLoginPage = (props) => {\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        setError(undefined);\r\n    }, [username, password]);\r\n    const onClickLogin = async event => {\r\n        event.preventDefault();\r\n        const creds = {\r\n            username,\r\n            password\r\n        }\r\n        const { history } = props;\r\n        const { push } = history;\r\n\r\n        setError(undefined);\r\n        try{\r\n            await dispatch(loginHandler(creds));\r\n            push('/');\r\n        }catch(apiError){\r\n            setError(apiError.response.data.message);\r\n        }\r\n        \r\n    }\r\n    const {t} = useTranslation();\r\n    const pendingApiCall = useApiProgress('post','/api/1.0/auth');\r\n        const buttonEnabled = username && password;\r\n        return(\r\n            <div className=\"container\">\r\n            <form>\r\n                <h1 className=\"text-center\">{t('Login')}</h1>\r\n                <Input label={t('Username')} onChange={event => setUsername(event.target.value)} />\r\n                <Input label={t('Password')} onChange={event => setPassword(event.target.value)} type=\"password\" />\r\n                {error && <div className=\"alert alert-danger\">{error}</div>}\r\n                <div className=\"form-group text-center\">\r\n                    <ButtonWithProgress onClick={onClickLogin} disabled={!buttonEnabled || pendingApiCall} pendingApiCall={pendingApiCall} text={t('Login')} />\r\n                </div>\r\n                \r\n            </form>\r\n            </div>\r\n\r\n        );\r\n}\r\n\r\n\r\n\r\nexport default UserLoginPage;","import React, { useState } from 'react';\r\nimport Input from '../components/Input';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signupAdminHandler } from '../redux/authActions';\r\n\r\nconst AdminSignupPage = (props) => {\r\n    const [form, setForm] = useState({\r\n        username: null,\r\n        password: null,\r\n        passwordRepeat: null\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const dispatch = useDispatch();\r\n const onChange = event => {\r\n        const {name, value} = event.target;\r\n        setErrors((previousErrors) => ({ ...previousErrors, [name]: undefined}));\r\n        setForm((previousForm) => ({ ...previousForm, [name]: value}));\r\n    }\r\n    const onClickSignup = async event => {\r\n        event.preventDefault();  \r\n        const { history } = props;\r\n        const { push } = history;\r\n        const {username, password} = form;\r\n        const body = {\r\n            username,\r\n            password\r\n        };\r\n        try{\r\n            await dispatch(signupAdminHandler(body));\r\n            push('/');\r\n        }catch(error){\r\n            if(error.response.data.validationErrors){\r\n              setErrors(error.response.data.validationErrors);\r\n            }  \r\n            \r\n        }\r\n    }\r\n        const { t } = useTranslation();\r\n        const {username: usernameError, password: passwordError} = errors;\r\n        const pendingApiCallSignup = useApiProgress('post','/api/1.0/admin');\r\n        const pendingApiCallLogin = useApiProgress('post','/api/1.0/auth');\r\n        const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n\r\n        let passwordRepeatError;\r\n        if(form.password != form.passwordRepeat){\r\n            passwordRepeatError = t('Password mismatch');\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n            <form>\r\n                <h1 className=\"text-center\">{t('Sign Up')}</h1>\r\n                <Input name=\"username\" label={t('Username')} error={usernameError} onChange={onChange} />\r\n                <Input name=\"password\" label={t('Password')} error={passwordError} onChange={onChange} type=\"password\" />\r\n                <Input name=\"passwordRepeat\" label={t('Password Repeat')} error={passwordRepeatError} onChange={onChange} type=\"password\"/>\r\n                <div className=\"form-group text-center\">\r\n                    <ButtonWithProgress onClick={onClickSignup} disabled={pendingApiCall || passwordRepeatError != undefined} pendingApiCall={pendingApiCall} text={t('Sign Up')}/>\r\n                </div>\r\n                \r\n            </form>\r\n            </div>\r\n\r\n        );\r\n}\r\n\r\nexport default AdminSignupPage;","import React, { useEffect, useState } from 'react';\r\nimport Input from '../components/Input';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginAdminHandler} from '../redux/authActions';\r\n\r\nconst AdminLoginPage = (props) => {\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        setError(undefined);\r\n    }, [username, password]);\r\n    const onClickLogin = async event => {\r\n        event.preventDefault();\r\n        const creds = {\r\n            username,\r\n            password\r\n        }\r\n        const { history } = props;\r\n        const { push } = history;\r\n\r\n        setError(undefined);\r\n        try{\r\n            await dispatch(loginAdminHandler(creds));\r\n            push('/');\r\n        }catch(apiError){\r\n            setError(apiError.response.data.message);\r\n        }\r\n        \r\n    }\r\n    const {t} = useTranslation();\r\n    const pendingApiCall = useApiProgress('post','/api/1.0/admin/auth');\r\n        const buttonEnabled = username && password;\r\n        return(\r\n            <div className=\"container\">\r\n            <form>\r\n                <h1 className=\"text-center\">{t('Login')}</h1>\r\n                <Input label={t('Username')} onChange={event => setUsername(event.target.value)} />\r\n                <Input label={t('Password')} onChange={event => setPassword(event.target.value)} type=\"password\" />\r\n                {error && <div className=\"alert alert-danger\">{error}</div>}\r\n                <div className=\"form-group text-center\">\r\n                    <ButtonWithProgress onClick={onClickLogin} disabled={!buttonEnabled || pendingApiCall} pendingApiCall={pendingApiCall} text={t('Login')} />\r\n                </div>\r\n                \r\n            </form>\r\n            </div>\r\n\r\n        );\r\n}\r\n\r\n\r\n\r\nexport default AdminLoginPage;","export default __webpack_public_path__ + \"static/media/profile.06c30927.png\";","import React from 'react';\r\nimport defaultPicture from '../assets/profile.png';\r\n\r\n\r\nconst ProfileImageWithDefault = props => {\r\n    const { image, tempimage } = props;\r\n    let imageSource = defaultPicture;\r\n    if(image){\r\n        imageSource = 'images/'+image;\r\n    }\r\n    return <img \r\n        alt={`Profile`} \r\n        src={tempimage || imageSource} { ...props}\r\n        onError={(event) => {\r\n            event.target.src = defaultPicture;\r\n        }}/>;\r\n};\r\n\r\nexport default ProfileImageWithDefault;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\n\r\nconst UserListItem = (props) => {\r\n    const { user } = props;\r\n    const { username, fullname } = user;\r\n\r\n    return (\r\n        <Link to={`/user/${username}`} className=\"list-group-item list-group-item-action\" >\r\n            <ProfileImageWithDefault\r\n                 className=\"img-circle rounded-circle\" \r\n                 width=\"30\" \r\n                 height=\"30\" \r\n                 alt={`${username} profile`} \r\n                 />\r\n            <span className=\"pl-2\">\r\n                {fullname}@{username}\r\n            </span>\r\n            \r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default UserListItem;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border text-black-50\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React, {useEffect, useState} from 'react';\r\nimport { getUsers } from '../api/apiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport UserListItem from './UserListItem';\r\nimport { useSelector } from 'react-redux';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from './Spinner';\r\n\r\nconst UserList = (props) => {\r\n\r\n    const [page, setPage] = useState({\r\n        content:[],\r\n        size: 3,\r\n        number: 0\r\n    });\r\n\r\n    const [loadFailure, setLoadFailure] = useState(false);\r\n\r\n    const pendingApiCall = useApiProgress('get','/api/user/1');\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    const { isLoggedIn, admin} = useSelector((store) => ({\r\n        isLoggedIn: store.isLoggedIn\r\n    }));\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = page.number + 1;\r\n        loadUsers(nextPage);\r\n    };\r\n    const onClickPrevious = () => {\r\n        const previousPage = page.number - 1;\r\n        loadUsers(previousPage);\r\n    };\r\n\r\n    const loadUsers = async page => {\r\n        setLoadFailure(false);\r\n        try{\r\n            const response = await getUsers(page);\r\n            console.log(response);\r\n            setPage(response.data);\r\n        }catch(error){\r\n            setLoadFailure(true);\r\n        };\r\n    };\r\n\r\n    const { t } = useTranslation();\r\n    const { content : users, last, first} = page;\r\n\r\n    let actionDiv = (\r\n        <div>\r\n                    {first == false && <button\r\n                        className=\"btn btn-sm btn-light\"\r\n                        onClick={onClickPrevious}>\r\n                            {t('Previous')}\r\n                    </button>}\r\n                    {last == false && <button\r\n                        className=\"btn btn-sm btn-light float-right\"\r\n                        onClick={onClickNext}>\r\n                            {t('Next')}\r\n                    </button>}\r\n                </div>\r\n    );\r\n    if(pendingApiCall){\r\n        actionDiv = (\r\n            <Spinner />\r\n        );\r\n    }\r\n\r\n        return (\r\n           <div className=\"container\">\r\n            <div className=\"card\">\r\n                <h3 className=\"card-header text-center\">{t('Users')}</h3>\r\n                <div className=\"list-group-flush\">\r\n            {users.map(user => (\r\n                    <UserListItem key={user.username} user={user} />\r\n                )\r\n            )}\r\n                </div>\r\n                {actionDiv}\r\n                {loadFailure && <div className=\"text-center text-danger\">{t('Load Failure')}</div>}\r\n            </div>\r\n           </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\n\r\nconst Modal = props => {\r\n  const { visible, onClickCancel, message, onClickOk, pendingApiCall, title, okButton } = props;\r\n  const { t } = useTranslation();\r\n\r\n  let className = 'modal';\r\n  if (visible) {\r\n    className += ' show d-block';\r\n  }else{\r\n    className += ' fade';\r\n  }\r\n\r\n  return (\r\n    <div className={className} style={{ backgroundColor: '#000000b0' }}>\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{title}</h5>\r\n          </div>\r\n          <div className=\"modal-body\">{message}</div>\r\n          <div className=\"modal-footer\">\r\n            <button className=\"btn btn-secondary\" disabled={pendingApiCall} onClick={onClickCancel}>\r\n              {t('Cancel')}\r\n            </button>\r\n            <ButtonWithProgress\r\n              className=\"btn btn-danger\"\r\n              onClick={onClickOk}\r\n              pendingApiCall={pendingApiCall}\r\n              disabled={pendingApiCall}\r\n              text={okButton}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams} from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Input from './Input';\r\nimport { deleteUserAddRequest, updateUser, cancelDeleteUser} from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport { logoutSuccess, updateSuccess } from '../redux/authActions';\r\nimport Modal from './Modal';\r\n\r\nconst ProfileCard = props => {\r\n    const [inEditMode, setInEditMode] = useState(false);\r\n    const [updatedFullname, setUpdatedFullname] = useState();\r\n    const [updatedEmail, setUpdatedEmail] = useState();\r\n    const [updatedPhone, setUpdatedPhone] = useState();\r\n    const { username: loggedInUsername, role } = useSelector((store) => ({username: store.username}));\r\n    const routeParams = useParams();\r\n    const pathUsername = routeParams.username;\r\n    const [user, setUser] = useState({});\r\n    const [deleteRequest, setDeleteRequest] = useState({});\r\n    const [editable, setEditable] = useState(false);\r\n    const [validationErrors, setValidationErrors] = useState({});\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setUser(props.user);\r\n    }, [props.user]);\r\n\r\n    useEffect(() => {\r\n        setDeleteRequest(props.deleteRequest);\r\n    }, [props.deleteRequest]);\r\n\r\n    useEffect(() => {\r\n        setEditable(pathUsername === loggedInUsername);\r\n    }, [pathUsername, loggedInUsername]);\r\n\r\n    useEffect(() => {\r\n        setValidationErrors((previousValidationErrors) => ({\r\n            ...previousValidationErrors,\r\n            fullname: null,\r\n            email: null,\r\n            phone: null\r\n        }));\r\n    }, [updatedFullname,updatedEmail, updatedPhone]);\r\n\r\n    const { username, fullname, email, phone, created_at, updated_at } = user;\r\n\r\n    const pendingApiCallDeleteUser = useApiProgress('delete',`/api/user/${username}`,true);\r\n\r\n    const { t } = useTranslation();\r\n    useEffect(() => {\r\n        if(!inEditMode){\r\n            setUpdatedFullname(null);\r\n        }else{\r\n            setUpdatedFullname(fullname);\r\n        }\r\n    }, [inEditMode, fullname]);\r\n\r\n    useEffect(() => {\r\n        if(!inEditMode){\r\n            setUpdatedEmail(null);\r\n        }else{\r\n            setUpdatedEmail(email);\r\n        }\r\n    }, [inEditMode, email]);\r\n\r\n    useEffect(() => {\r\n        if(!inEditMode){\r\n            setUpdatedPhone(null);\r\n        }else{\r\n            setUpdatedPhone(phone);\r\n        }\r\n    }, [inEditMode, phone]);\r\n\r\n    const onClickSave = async () => {\r\n        const body = {\r\n            username,\r\n            fullname: updatedFullname,\r\n            email: updatedEmail,\r\n            phone: updatedPhone,\r\n            token: props.token\r\n        };\r\n        try{\r\n            const response = await  updateUser(body);\r\n            setInEditMode(false);\r\n            setUser(response.data[0]);\r\n            dispatch(updateSuccess(response.data));\r\n        }catch(error){\r\n            setValidationErrors(error.response.data.validationErrors);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const onClickCancel = () => {\r\n        setModalVisible(false);\r\n    };\r\n\r\n    const onClickDeleteUserRequest = async () => {\r\n        const body = {\r\n            username,\r\n            token: props.token\r\n        };\r\n        await deleteUserAddRequest(body);\r\n        setModalVisible(false);\r\n        history.push('/');\r\n\r\n    };\r\n\r\n    const onClickCancelDeleteUser = async () => {\r\n        const body = {\r\n            username,\r\n            token: props.token\r\n        };\r\n        await cancelDeleteUser(body);\r\n        history.push('/');\r\n    };\r\n\r\n    const pendingApiCall = useApiProgress('put','/api/user/' + username);\r\n    const { fullname: fullnameError, email: emailError, phone: phoneError} = validationErrors;\r\n\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <div className=\"card text-center\">\r\n                <div className=\"card-header\">\r\n                    Profile\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {!inEditMode && (\r\n                        <>\r\n                            <h5 className=\"card-title\">UserName:</h5>\r\n                            <p className=\"card-text\">{username}</p>\r\n                            <h5 className=\"card-title\">FullName:</h5>\r\n                            <p className=\"card-text\">{fullname}</p>\r\n                            <h5 className=\"card-title\">E-Mail:</h5>\r\n                            <p className=\"card-text\">{email}</p>\r\n                            <h5 className=\"card-title\">Phone:</h5>\r\n                            <p className=\"card-text\">{phone}</p>\r\n                        </>\r\n                    )}\r\n                    {inEditMode && (\r\n                        <div>\r\n                            <Input\r\n                                label={t('Change Full Name')}\r\n                                defaultValue={fullname}\r\n                                onChange={(event) => {setUpdatedFullname(event.target.value)}}\r\n                                error={fullnameError}\r\n                            />\r\n\r\n                            <Input\r\n                                label={t('Change E-Mail')}\r\n                                defaultValue={email}\r\n                                onChange={(event) => {setUpdatedEmail(event.target.value)}}\r\n                                error={emailError}\r\n                            />\r\n\r\n                            <Input\r\n                                label={t('Change Phone')}\r\n                                defaultValue={phone}\r\n                                onChange={(event) => {setUpdatedPhone(event.target.value)}}\r\n                                error={phoneError}\r\n                            />\r\n\r\n                            <div className=\"m-2\">\r\n                                <ButtonWithProgress\r\n                                    className=\"btn btn-primary d-inline-flex\"\r\n                                    onClick={onClickSave}\r\n                                    disabled={pendingApiCall}\r\n                                    pendingApiCall={pendingApiCall}\r\n                                    text={\r\n                                        <>\r\n                                            <i className=\"material-icons\">save</i>{t('Save')}\r\n                                        </>\r\n                                    }\r\n                                />\r\n                                <button\r\n                                    className=\"btn btn-light d-inline-flex ml-1\"\r\n                                    onClick={() => setInEditMode(false)}\r\n                                    disabled={pendingApiCall}>\r\n                                    <i className=\"material-icons\">close</i>{t('Cancel')}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {editable && (\r\n                        <>\r\n                            <hr/>\r\n                            <button className=\"btn btn-success d-inline-flex\" onClick={() => setInEditMode(true) }>\r\n                                <i className=\"material-icons\">edit</i>\r\n                                {t('Edit')}\r\n                            </button>\r\n                            <div className=\"pt-2\">\r\n                                {!props.deleteRequest && (\r\n                                    <button className=\"btn btn-danger d-inline-flex\" onClick={() => setModalVisible(true)}>\r\n                                        <i className=\"material-icons\">directions_run</i>\r\n                                        {t('Delete My Account')}\r\n                                    </button>\r\n                                )}\r\n                                {props.deleteRequest && (\r\n                                    <button className=\"btn btn-primary d-inline-flex\" onClick={onClickCancelDeleteUser}>\r\n                                        <i className=\"material-icons\">directions_run</i>\r\n                                        {t('Cancel Account Deletion')}\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n\r\n                        </>\r\n                    )}\r\n\r\n                </div>\r\n                <div className=\"card-footer text-muted\">\r\n                    <h6 title=\"Last Update\"><i className=\"material-icons\">update</i>{updated_at}</h6>\r\n                </div>\r\n            </div>\r\n            {!props.deleteRequest && (\r\n                <Modal\r\n                    visible={modalVisible}\r\n                    title={t('Delete My Account')}\r\n                    okButton={t('Delete My Account')}\r\n                    onClickCancel={onClickCancel}\r\n                    onClickOk={onClickDeleteUserRequest}\r\n                    message={t('Are you sure to delete your account?')}\r\n                    pendingApiCall={pendingApiCallDeleteUser}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ProfileCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProfileCard  from '../components/ProfileCard';\r\nimport {getDeleteRequest, getUser, getUserAdmin} from '../api/apiCalls';\r\nimport { useParams } from 'react-router';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from '../components/Spinner';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst UserPage = () => {\r\n    const [user, setUser] = useState({});\r\n    const [deleteRequest, setDeleteRequest] = useState();\r\n    const [notFound, setNotFound] = useState(false);\r\n    const { username } = useParams();\r\n    const {t} = useTranslation();\r\n    const pendingApiCall = useApiProgress('get','/api/user/' + username);\r\n    const { isLoggedIn, role, token } = useSelector((store) => ({\r\n        isLoggedIn: store.isLoggedIn,\r\n        role: store.role,\r\n        token: store.token\r\n    }));\r\n    useEffect(() => {\r\n        setNotFound(false);\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        const loadUser = async () => {\r\n            const body = {\r\n                username,\r\n                token\r\n            };\r\n            try{\r\n            const response = await getUser(username);\r\n            setUser(response.data[0]);\r\n            const responseRequest = await getDeleteRequest(body);\r\n            console.log(responseRequest);\r\n            setDeleteRequest(responseRequest.data[\"DeleteRequest\"]);\r\n            }catch(error){\r\n                setNotFound(true);\r\n            }\r\n        }\r\n        loadUser();\r\n    }, [username]);\r\n    \r\n    if(pendingApiCall){\r\n        return (\r\n            <Spinner />\r\n        );\r\n    }\r\n\r\n    if(notFound){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"alert alert-danger text-center\">\r\n                    <div>\r\n                        <i className=\"material-icons\" style={{ fontSize: '48px' }}>error</i>\r\n                    </div>\r\n                    {t('User not found')}\r\n                </div>    \r\n            </div>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <ProfileCard user={user} token={token} deleteRequest={deleteRequest}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPage;","import React, { useEffect, useState, useRef } from 'react';\r\nimport logo from '../assets/hoaxify.png';\r\nimport {Link} from 'react-router-dom';\r\nimport {useTranslation} from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {logoutHandler} from '../redux/authActions';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\n\r\nconst TopBar = (props) => {\r\nconst {t} = useTranslation();\r\nconst { username, isLoggedIn, fullname, image, role, token} = useSelector((store) => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n    username: store.username,\r\n    fullname: store.fullname,\r\n    image: store.image,\r\n    role: store.role,\r\n    token: store.token\r\n}));\r\n\r\nconst menuArea = useRef(null);\r\nconst [menuVisible, setMenuVisible] = useState(false);\r\n\r\nuseEffect(() => {\r\n    document.addEventListener('click', menuClickTracker)\r\n    return () => {\r\n        document.removeEventListener('click', menuClickTracker);\r\n    };\r\n}, [isLoggedIn]);\r\n\r\nconst menuClickTracker = event => {\r\n    if(menuArea.current == null || !menuArea.current.contains(event.target)){\r\n        setMenuVisible(false);\r\n    }\r\n};\r\n\r\nconst dispatch = useDispatch();\r\nconst onLogoutSuccess = async event => {\r\n    event.preventDefault();\r\n    const creds = {\r\n        token\r\n    }\r\n    dispatch(logoutHandler(creds));\r\n};\r\n   \r\nlet links = (\r\n<ul className=\"navbar-nav ms-auto\">\r\n<li>\r\n    <Link className=\"nav-link\" to=\"/login\">\r\n        {t(\"Login\")}\r\n    </Link>\r\n</li>\r\n<li>\r\n    <Link className=\"nav-link\" to=\"/signup\">\r\n        {t(\"Sign Up\")}\r\n    </Link>\r\n</li>\r\n<li>\r\n    <Link className=\"nav-link\" to=\"/admin/login\">\r\n        {t(\"Admin Login\")}\r\n    </Link>\r\n</li>\r\n</ul>\r\n);\r\n\r\n    if(isLoggedIn){\r\n        let dropDownClass = 'dropdown-menu p-0 shadow';\r\n        if(menuVisible){\r\n            dropDownClass += ' show';\r\n        }\r\n        links = (\r\n            <ul className=\"navbar-nav ms-auto\" ref={menuArea}>\r\n            <li className=\"nav-item dropdown\">\r\n            <div className=\"nav-link d-flex\" style={{ cursor: 'pointer'}} onClick={()=> setMenuVisible(true)}>\r\n                <ProfileImageWithDefault \r\n                image={image} \r\n                width=\"32\" height=\"32\" \r\n                className=\"rounded-circle img-circle m-auto\"/>\r\n                <span className=\"dropdown-toggle p-2\">{fullname}{!fullname && `${username}-${role}`}</span>\r\n            </div>\r\n            <div className={dropDownClass}>\r\n                {role == \"user\" && (\r\n                <Link className=\"dropdown-item d-flex\" to={`/user/${username}`}  onClick={()=> setMenuVisible(false)}>\r\n                    <i className=\"material-icons text-info\">person</i>\r\n                    <span className=\"\">{t(\"My Profile\")}</span>\r\n                </Link>\r\n                )}\r\n                <span className=\"dropdown-item d-flex\" onClick={onLogoutSuccess} style={{ cursor: 'pointer'}}>\r\n                    <i className=\"material-icons text-info\">power_settings_new</i>\r\n                    <span className=\"\">{t(\"Logout\")}</span>\r\n                </span> \r\n            </div>\r\n            </li>\r\n            </ul>\r\n        ); \r\n    };\r\n\r\n    return (\r\n        <div className=\"shadow-sm bg-light mb-2\">\r\n            <nav className=\"navbar navbar-light navbar-expand container\">\r\n                <Link className=\"navbar-brand d-flex\" to=\"/\">\r\n                    {/* <img src={logo} width=\"60\" alt=\"User&Admin Logo\"/> */}\r\n                    <span className=\"m-auto p-2\">User&Admin</span>\r\n                </Link>\r\n                {links}\r\n               </nav>\r\n        </div>\r\n        \r\n    );\r\n        \r\n       \r\n    \r\n}\r\n\r\n\r\nexport default TopBar;\r\n\r\n","export default __webpack_public_path__ + \"static/media/hoaxify.e76cb420.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {cancelDeleteUser, deleteUser} from \"../api/apiCalls\";\r\nimport {useHistory} from \"react-router\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst UserRequestItem = (props) => {\r\n    const { user } = props;\r\n    const { username, fullname } = user[1];\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n    const { isLoggedIn, role, token } = useSelector((store) => ({\r\n        isLoggedIn: store.isLoggedIn,\r\n        role: store.role,\r\n        token: store.token\r\n    }));\r\n\r\n    const onClickCancelDeleteUser = async () => {\r\n        const body = {\r\n            username,\r\n            token\r\n        };\r\n        await cancelDeleteUser(body);\r\n    };\r\n\r\n    const onClickDeleteUser = async () => {\r\n        const body = {\r\n            username,\r\n            token\r\n        };\r\n        await deleteUser(body);\r\n    };\r\n\r\n    return (\r\n        <Link to={`/user/${username}`} className=\"list-group-item list-group-item-action\" >\r\n                <button className=\"btn btn-danger d-inline-flex m-1\" title={t('Delete Account')} onClick={onClickDeleteUser}>\r\n                    <i className=\"material-icons\">person_off</i>\r\n                </button>\r\n\r\n                <button className=\"btn btn-primary d-inline-flex m-1\" title={t('Cancel Deletion')} onClick={onClickCancelDeleteUser}>\r\n                        <i className=\"material-icons\">cancel</i>\r\n\r\n                </button>\r\n            <span className=\"pl-2 m-3\">\r\n                {fullname}@{username}\r\n            </span>\r\n\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default UserRequestItem;","import React, {useEffect, useState} from 'react';\r\nimport { getDeleteRequests } from '../api/apiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport UserRequestItem from './UserRequestItem';\r\nimport { useSelector } from 'react-redux';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from './Spinner';\r\n\r\nconst UserRequestList = (props) => {\r\n\r\n    const [page, setPage] = useState({\r\n        content:[],\r\n        size: 3,\r\n        number: 0\r\n    });\r\n\r\n    const [loadFailure, setLoadFailure] = useState(false);\r\n\r\n    const pendingApiCall = useApiProgress('get','/api/userwiper/0/0');\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    const { isLoggedIn} = useSelector((store) => ({\r\n        isLoggedIn: store.isLoggedIn\r\n    }));\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = page.number + 1;\r\n        loadUsers(nextPage);\r\n    };\r\n    const onClickPrevious = () => {\r\n        const previousPage = page.number - 1;\r\n        loadUsers(previousPage);\r\n    };\r\n\r\n    const loadUsers = async page => {\r\n        setLoadFailure(false);\r\n        try{\r\n            const response = await getDeleteRequests(page,0);\r\n            console.log(response);\r\n            setPage(response.data);\r\n        }catch(error){\r\n            setLoadFailure(true);\r\n        };\r\n    };\r\n\r\n    const { t } = useTranslation();\r\n    const { content : users, last, first} = page;\r\n\r\n    let actionDiv = (\r\n        <div>\r\n            {first == false && <button\r\n                className=\"btn btn-sm btn-light\"\r\n                onClick={onClickPrevious}>\r\n                {t('Previous')}\r\n            </button>}\r\n            {last == false && <button\r\n                className=\"btn btn-sm btn-light float-right\"\r\n                onClick={onClickNext}>\r\n                {t('Next')}\r\n            </button>}\r\n        </div>\r\n    );\r\n    if(pendingApiCall){\r\n        actionDiv = (\r\n            <Spinner />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <h3 className=\"card-header text-center\">{t(`Users's Delete Requests`)}</h3>\r\n                <div className=\"list-group-flush\">\r\n                    {users.map(user => (\r\n                            <UserRequestItem key={user[1].username} user={user} />\r\n                        )\r\n                    )}\r\n                </div>\r\n                {actionDiv}\r\n                {loadFailure && <div className=\"text-center text-danger\">{t('Load Failure')}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UserRequestList;","import React from \"react\";\r\nimport ApiProgress from \"../shared/ApiProgress\";\r\nimport UserSignupPage from \"../pages/UserSignupPage\";\r\nimport UserLoginPage from \"../pages/UserLoginPage\";\r\nimport AdminSignupPage from \"../pages/AdminSignupPage\";\r\nimport AdminLoginPage from \"../pages/AdminLoginPage\";\r\nimport LanguageSelector from \"../components/LanguageSelector\";\r\nimport HomePage from \"../pages/HomePage\";\r\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\r\nimport UserPage from '../pages/UserPage';\r\nimport TopBar from \"../components/TopBar\";\r\nimport { useSelector } from 'react-redux';\r\nimport UserList from \"../components/UserList\";\r\nimport UserRequestPage from \"../components/UserRequestList\";\r\n\r\nconst App = () => { \r\n  const { isLoggedIn, role } = useSelector((store) => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n    role: store.role\r\n  }));\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <TopBar />\r\n        <Switch>\r\n\r\n        <Route exact path=\"/\" component={UserList}/>\r\n\r\n        {isLoggedIn && (\r\n        <Route path=\"/requests\" component={UserRequestPage}/>\r\n        )}\r\n        {!isLoggedIn && (\r\n        <Route path=\"/login\" component={UserLoginPage}/>\r\n        )}\r\n        {!isLoggedIn && (\r\n        <Route path=\"/signup\" component={UserSignupPage}/>\r\n        )}\r\n        {!isLoggedIn && (\r\n        <Route path=\"/admin/login\" component={AdminLoginPage}/>\r\n        )}\r\n        {!isLoggedIn && (\r\n        <Route path=\"/admin/signup\" component={AdminSignupPage}/>\r\n        )}\r\n        <Route path=\"/user/:username\" component={UserPage}/>\r\n        <Redirect to=\"/\"/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\ni18n.use(initReactI18next).init({\r\n    resources: {\r\n        en:{\r\n            translations: {\r\n                'Sign Up': 'Sign Up',\r\n                'Login': 'Login',\r\n                'Admin Login': 'Admin Login',\r\n                'Password mismatch': 'Password mismatch',\r\n                Username: 'Username',\r\n                Password: 'Password',\r\n                'Password Repeat': 'Password Repeat',\r\n                Logout: 'Logout',\r\n                Users: 'Users',\r\n                Next: 'next > ',\r\n                Previous: '< previous',\r\n                'Load Failure': 'Load Failure',\r\n                'User Not Found': 'User Not Found',\r\n                Edit: 'Edit',\r\n                'Change Full Name': 'Change Full Name',\r\n                'Change E-Mail': 'Change E-Mail',\r\n                'Change Phone': 'Change Phone',\r\n                Save: 'Save',\r\n                Cancel: 'Cancel',\r\n                'My Profile': 'My Profile',\r\n                'Delete My Account': 'Delete My Account',\r\n                'Cancel Account Deletion': 'Cancel Account Deletion',\r\n                'Are you sure to delete your account?': 'Are you sure to delete your account?'\r\n            }\r\n        },\r\n        tr: {\r\n            translations: {\r\n                'Sign Up': 'Kayıt Ol',\r\n                'Login': 'Giriş Yap',\r\n                'Admin Login': 'Yönetici Girişi',\r\n                'Password mismatch': 'Aynı şifreyi giriniz',\r\n                Username: 'Kullanıcı Adı',\r\n                'Display Name': 'Tercih Edilen İsim',\r\n                Password: 'Şifre',\r\n                'Password Repeat': 'Şifreyi Tekrarla',\r\n                Logout: 'Çıkış',\r\n                Users: 'Kullanıcılar',\r\n                Next: 'sonraki >',\r\n                Previous: '< önceki',\r\n                'Load Failure': 'Liste Alınamadı',\r\n                'User Not Found': 'Kullanıcı Bulunamadı',\r\n                Edit: 'Düzenle',\r\n                'Change Display Name': 'Görünür İsminizi Değiştirin',\r\n                Save: 'Kaydet',\r\n                Cancel: 'İptal',\r\n                'My Profile': 'Profilim',\r\n                'Delete My Account': 'Hesabımı Sil',\r\n                'Are you sure to delete your account?': 'Hesabınızı silmek istediğinize emin misiniz?'\r\n            }\r\n        }\r\n    },\r\n    fallbackLng: 'en',\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    keySeparator: false,\r\n    interpolation: {\r\n        escapeValue: false,\r\n        formatSeparator: ','\r\n    },\r\n    react: {\r\n        wait:true\r\n    }\r\n})\r\n\r\nexport default i18n;","import * as ACTIONS from './Contants';\r\n\r\nconst defaultState = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: undefined,\r\n    password: undefined\r\n  };\r\n  \r\n  const authReducer = (state = {...defaultState}, action) => {\r\n    if(action.type == ACTIONS.LOGOUT_SUCCESS){\r\n      return defaultState;\r\n    } else if(action.type == ACTIONS.LOGIN_SUCCESS){\r\n      return {\r\n          ...action.payload,\r\n          isLoggedIn: true\r\n      }\r\n    } else if(action.type == ACTIONS.UPDATE_SUCCESS){\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    }\r\n    return state;\r\n  };\r\n  export default authReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\nimport { setAuthorizationHeader } from '../api/apiCalls';\r\n\r\nconst secureLs = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n    const hAuth = secureLs.get('h-auth');\r\n    let stateInLocalStorage = {\r\n        isLoggedIn: false,\r\n        username: undefined,\r\n        displayName: undefined,\r\n        image: undefined,\r\n        password: undefined\r\n    };\r\n\r\n    if(hAuth){\r\n       return hAuth;\r\n    }\r\n    return stateInLocalStorage;\r\n}\r\n\r\nconst updateStateInStorage = newState => {\r\n    secureLs.set('h-auth', newState);\r\n}\r\n\r\nconst configureStore = () => {\r\n    const initialState = getStateFromStorage();\r\n    setAuthorizationHeader(initialState);\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    const store = createStore(authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n    store.subscribe(() => {\r\n        updateStateInStorage(store.getState());\r\n        setAuthorizationHeader(store.getState());\r\n    });\r\n    return store;\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./container/App\";\nimport './i18n';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}